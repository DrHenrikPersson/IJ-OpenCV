{"name":"IJ-OpenCV","tagline":"Connecting ImageJ and OpenCV","body":"IJ-OpenCV is a Java library that allows the communication of ImageJ/Fiji - a software for image analysis that is widely employed in life sciences - and OpenCV - a well-known computer vision library.\r\n\r\nThere are several benefits provided by the communication of ImageJ/Fiji and OpenCV. From the ImageJ/Fiji perspective, this tool is enhanced with several computer vision and machine learning algorithms, avoiding the re-implementation of methods and the connection with several external libraries. From the OpenCV point of view, this library is improved with a simple-to-use GUI and with the functionality to manage regions of interest.\r\n\r\nIJ-OpenCV is free to use and licensed under the license GNU GPL 3.0.\r\n\r\n### Download\r\n\r\n\r\n### Installation\r\n\r\n### System requirements\r\n\r\n\r\n### Documentation\r\n\r\n### List of IJ-OpenCV plugins\r\n* Adaptive threshold: Given an image, it applies either the adaptive Gaussian threshold or the adaptive mean threshold. [OpenCV link]().\r\n* BGR histogram comparison: Given a stack of images, it compares the images using the BGR histogram and employing different measures . [OpenCV link]().\r\n* Black hat: Given a grayscale image, it returns such an image after applying the black hat morphological operation. [OpenCV link]().\r\n* Canny edge detection: Given an image, it detects its using the Canny edge detection algorithm. [OpenCV link]().\r\n* Convex hull from polygon: Given a polygonal selection, it returns its convex hull . [OpenCV link]().\r\n* Detect circles: Given an image, it detects the circles of such an image using the Hough Circle transform. [OpenCV link]().\r\n* Face detection: Given an image, it detects the faces of the image. [OpenCV link]().\r\n* Find contours: Given an image, it detects the contours of the objects of such an image. [OpenCV link]().\r\n* High dynamic range imaging: Given a stack of images, it creates a high dynamic range image using the exposure fusion. [OpenCV link]().\r\n* Hough Lines: Given an image, it computes the lines of the image using the Hough transform. [OpenCV link]().\r\n* HSV histogram comparison: Given a stack of images, it compares the images using the HSV histogram and employing different measures . [OpenCV link]().\r\n* Keypoint detector: Given an image, it detects its keypoints using different algorithms. [OpenCV link]().\r\n* Kmeans clustering: Given a stack of images, it groups them using the BGR histogram as features and the Kmeans clustering algorithm. [OpenCV link]().\r\n* Non local means denoising: Given an image, it applies non local means denoising. [OpenCV link]().\r\n* RotatedRect from a polygon ROI: Given a polygonal selection, it returns the associated rotated rectangle. [OpenCV link]().\r\n* Stitching: Given an array of images, it stitches them creating a panoramic view. [OpenCV link]().\r\n* Template Matching: Given an image, and a selection (template) in that image, it finds all the other regions of the image that match with the template. [OpenCV link]().\r\n* White Hat: Given a grayscale image, it returns such an image after applying the white hat morphological operation. [OpenCV link]().\r\n\r\n### Videos\r\n\r\n\r\n\r\n\r\n### Contact\r\nJÃ³nathan Heras (joheras@gmail.com)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}